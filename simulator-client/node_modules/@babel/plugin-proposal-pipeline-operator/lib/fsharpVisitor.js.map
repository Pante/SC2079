{"version":3,"names":["_core","require","_buildOptimizedSequenceExpression","fsharpVisitor","BinaryExpression","path","scope","node","operator","left","right","placeholder","generateUidIdentifierBasedOnNode","call","type","t","awaitExpression","cloneNode","callExpression","sequence","buildOptimizedSequenceExpression","replaceWith","_default","exports","default"],"sources":["../src/fsharpVisitor.ts"],"sourcesContent":["import { types as t, type PluginObject } from \"@babel/core\";\nimport type { NodePath } from \"@babel/traverse\";\nimport buildOptimizedSequenceExpression from \"./buildOptimizedSequenceExpression.ts\";\n\nconst fsharpVisitor: PluginObject[\"visitor\"] = {\n  BinaryExpression(path) {\n    const { scope, node } = path;\n    const { operator, left, right } = node;\n    if (operator !== \"|>\") return;\n\n    const placeholder = scope.generateUidIdentifierBasedOnNode(left);\n\n    const call =\n      right.type === \"AwaitExpression\"\n        ? t.awaitExpression(t.cloneNode(placeholder))\n        : t.callExpression(right, [t.cloneNode(placeholder)]);\n    const sequence = buildOptimizedSequenceExpression({\n      placeholder,\n      call,\n      path: path as NodePath<t.BinaryExpression & { operator: \"|>\" }>,\n    });\n    path.replaceWith(sequence);\n  },\n};\n\nexport default fsharpVisitor;\n"],"mappings":";;;;;;AAAA,IAAAA,KAAA,GAAAC,OAAA;AAEA,IAAAC,iCAAA,GAAAD,OAAA;AAEA,MAAME,aAAsC,GAAG;EAC7CC,gBAAgBA,CAACC,IAAI,EAAE;IACrB,MAAM;MAAEC,KAAK;MAAEC;IAAK,CAAC,GAAGF,IAAI;IAC5B,MAAM;MAAEG,QAAQ;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGH,IAAI;IACtC,IAAIC,QAAQ,KAAK,IAAI,EAAE;IAEvB,MAAMG,WAAW,GAAGL,KAAK,CAACM,gCAAgC,CAACH,IAAI,CAAC;IAEhE,MAAMI,IAAI,GACRH,KAAK,CAACI,IAAI,KAAK,iBAAiB,GAC5BC,WAAC,CAACC,eAAe,CAACD,WAAC,CAACE,SAAS,CAACN,WAAW,CAAC,CAAC,GAC3CI,WAAC,CAACG,cAAc,CAACR,KAAK,EAAE,CAACK,WAAC,CAACE,SAAS,CAACN,WAAW,CAAC,CAAC,CAAC;IACzD,MAAMQ,QAAQ,GAAG,IAAAC,yCAAgC,EAAC;MAChDT,WAAW;MACXE,IAAI;MACJR,IAAI,EAAEA;IACR,CAAC,CAAC;IACFA,IAAI,CAACgB,WAAW,CAACF,QAAQ,CAAC;EAC5B;AACF,CAAC;AAAC,IAAAG,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEarB,aAAa"}